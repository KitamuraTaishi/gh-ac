name: TEST
run-name: TEST -  ${{ toJSON(github.event.*.message) }} by ${{ github.actor }}
on: push
defaults:
  run:
    shell: bash
jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions: 
      pull-requests: write
      contents: read
    steps:
      - shell: bash
        run: echo "${SHELL}"
      - shell: python
        run: |
          [ f"hello_{i}" for i in range(5)]
      # - uses: actions/checkout@v4
      # - run: echo "${GITHUB_HEAD_REF}"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     permissions: 
#       contents: write
#       pull-requests: write
#     env: 
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     steps:
#       - uses: actions/checkout@v4
#       - run: echo "${GITHUB_HEAD_REF}"
#       - run: printenv | grep -i github 
        # env:

        
# defaults:
#   run:
#     shell: bash
# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true
# jobs:
#   debug:
#     runs-on: ubuntu-latest 
#     steps:
#       - uses: actions/checkout@v4  
#       - uses: ./.github/actions/dump/
#         id: dump
#         with:
#           enable-context: 'true'
#       - run: echo "${DATE}"
#         env: 
#           DATE: ${{ steps.dump.outputs.dumped-date }}
  # upload:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:
  #     - run: echo "gskfjgkdsfjdfjlsdkjfl" > date.txt
  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: uploaded
  #         path: date.txt
  #         retention-days: 7

  # download:
  #   runs-on: ubuntu-latest
  #   needs: [upload]
  #   timeout-minutes: 5
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: uploaded
  #         path: downloaded
  #     - run: cat downloaded/date.txt
  # test1:
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 5
  #   steps:
  #     - id: test_1
  #       run: echo "result=TTEESST" >> "${GITHUB_OUTPUT}"
  #   outputs:
  #     result: ${{ steps.test_1.outputs.result }}
  # test2:
  #   runs-on: ubuntu-latest
  #   needs: [test1]
  #   timeout-minutes: 5
  #   steps:
  #     - run: echo ${RESULT}
  #       env:
  #         RESULT: ${{ needs.test1.outputs.result }}

  
  # test:
  #   runs-on: ubuntu-latest 
  #   timeout-minutes: 5
  #   steps:
  #     - run: |

  #         echo "::error::ERROR"
  #         echo "::warning::WARNING"
  #         echo "::notice::NOTICE"

  #         echo "### Title :rocket: " >> "${GITHUB_STEP_SUMMARY}"
  #         echo "- first line" >> "${GITHUB_STEP_SUMMARY}"
  #         echo "- second line" >> "${GITHUB_STEP_SUMMARY}"

      # - uses: actions/checkout@4
      # - run: |
      #     docker run --rm -v "$(pwd):$(pwd)" -w "$(pwd)" rhysd/actionlint:latest